#!/usr/bin/env bash
# ^ uses `env` command (via that path) to get path variables and then call `bash`
#   according to first occurence found
#
# Name this script "pre-commit" and place it in the ".git/hooks/" directory

#
##
### NOTE: This script is a prototype; commands will likely benefit from some adjustment.
##
#

##====================================================================================##
# If any command fails, exit immediately with that command's exit status
# Exit if an attempt to expand an unset variable
# Write output to stdout
set -euo pipefail
##====================================================================================##


##====================================================================================##
## ANSI Color Codes for use with echo command
## in order to ensure robustness we've just placed these in the hook itself
##                                                     (rather than source another file)
## Just comment in/out as needed if you decide to edit
# BLACK='\033[0;30m'
# RED='\033[0;31m'
GREEN='\033[0;32m'
# BROWN='\033[0;33m'
# BLUE='\033[0;34m'
# PURPLE='\033[0;35m'
# CYAN='\033[0;36m'
# LIGHT_GRAY='\033[0;37m'
DARK_GRAY='\033[1;30m'
# LIGHT_RED='\033[1;31m'
LIGHT_GREEN='\033[1;32m'
YELLOW='\033[1;33m'
# LIGHT_BLUE='\033[1;34m'
# LIGHT_PURPLE='\033[1;35m'
# LIGHT_CYAN='\033[1;36m'
# WHITE='\033[1;37m'
NC='\033[0m' # No Color
##====================================================================================##


##====================================================================================##
echo -e "${DARK_GRAY}==============${YELLOW}Beginning of Pre-Commit Hook Script${DARK_GRAY}===============${NC}"

# Run `cargo check` against all code in the `src/` directory
echo -e "${DARK_GRAY}================================================================${NC}"
echo -e "${YELLOW}running cargo-Check...${NC}"
echo
cargo check
echo
echo -e "${GREEN}cargo-Check passed!${NC}"
echo -e "${DARK_GRAY}================================================================${NC}"

# Run `cargo test` against all code in the `src/` directory *EXCEPT* `main.rs`
echo -e "${DARK_GRAY}================================================================${NC}"
echo -e "${YELLOW}running cargo-Test (excluding `main.rs`)...${NC}"
echo
cargo test
echo
echo -e "${GREEN}cargo-Test passed!${NC}"
echo -e "${DARK_GRAY}================================================================${NC}"

# Run `cargo clippy` against all code in the `src/` directory
echo -e "${DARK_GRAY}================================================================${NC}"
echo -e "${YELLOW}running cargo-Clippy...${NC}"
echo
cargo clippy
echo
echo -e "${GREEN}cargo-Clippy passed!${NC}"
echo -e "${DARK_GRAY}================================================================${NC}"

# Run `cargo fmt --check` against all code in the `src/` directory
echo -e "${DARK_GRAY}================================================================${NC}"
echo -e "${YELLOW}running cargo-Fmt...${NC}"
echo
cargo fmt --check
echo
echo -e "${GREEN}cargo-Fmt passed!${NC}"
echo -e "${DARK_GRAY}================================================================${NC}"

# Run `cargo doc` against all code in the `src/` directory
echo -e "${DARK_GRAY}================================================================${NC}"
echo -e "${YELLOW}running cargo-Doc...${NC}"
echo
cargo doc
echo
echo -e "${GREEN}cargo-doc docs generated!${NC}"
echo -e "${DARK_GRAY}================================================================${NC}"

echo -e "${DARK_GRAY}=================${LIGHT_GREEN}End of Pre-Commit Hook Script${DARK_GRAY}==================${NC}"
##====================================================================================##
# END OF SCRIPT
